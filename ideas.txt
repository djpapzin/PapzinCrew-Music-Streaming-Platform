# PapzinCrew Music Streaming Platform — Status & Ideas

## Status (Aug 13, 2025)
- [x] MVP complete: upload → B2 → stream; metadata + cover art extraction.
- [x] Backend on Render; PostgreSQL configured and in use (persistent DB).
- [x] Frontend on Netlify; uses Render backend.
- [x] CORS fixed (ALLOWED_ORIGINS corrected to include https://papzincrew.netlify.app).
- [x] Proxy streaming enabled to avoid B2 CORS issues.
- [x] Structured upload validation errors returned (e.g., file_too_large, unsupported_file_extension).
- [x] Duplicate upload route removed to prevent conflicts.
- [ ] Confirm data persists across backend redeploys (postgreSQL check end-to-end).
- [ ] Final polish: docs and blueprint verified for one-click deployment.

## Near-Term TODO
- [ ] Persistence test: upload a track, redeploy backend, verify track still present.
- [ ] Frontend: ensure UI displays backend `error_code` messages cleanly.
- [ ] Backblaze env: verify B2 bucket/key correctness in Render env and render.yaml placeholders.
- [ ] Observability: add minimal request/error logging for uploads/streams.

## Product Enhancements
- [ ] Playlists/queue; favorites.
- [ ] Search/filter (artist, title, BPM, tags).
- [ ] Shareable links; social previews.
- [ ] Now-playing mini-player; background audio on mobile.

## Technical Enhancements
- [ ] File de-duplication by content hash to avoid duplicate uploads.
- [ ] Rate limiting for upload/stream endpoints.
- [ ] Robust upload cancel/resume; large-file handling.
- [ ] Cover art caching/resizing; waveform preview generation.
- [ ] Admin endpoint: delete-by-id in `backend/app/routers/tracks.py` (optional).
- [ ] Unit tests for metadata extraction and image generation.

## Utilities
- [x] Cover art helper extracted for cleaner B2-first flow.
- [ ] Track housekeeping script: confirm `tools/scan_prune_tracks.py` options and add README snippet.
